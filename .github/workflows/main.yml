name: Tests

on: push

jobs:
  Safety:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
      - name: Install Safety
        run: |
          pip install safety
      - name: Check dependencies
        run: |
          source $HOME/.poetry/env
          poetry show -a | sed 's/(!)//' | awk '{print $1,"==",$2}' | safety check --stdin

  Linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install pre-commit
        run: |
          pip install pre-commit
      - name: Restore cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-
      - name: Install hooks
        run: |
          pre-commit install-hooks
      - name: Run hooks
        run: |
          pre-commit run --all-files

  test:
    name: "${{ matrix.os_name }}: Python ${{ matrix.python }}"
    needs: [Safety, Linting]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [2.7, 3.5, 3.6, 3.7]
        include:
          - os: ubuntu-latest
            os_name: Linux
            poetry_path: ~/.poetry/bin
            poetry_cache: ~/.cache/pypoetry
          - os: macos-latest
            os_name: macOS
            poetry_path: ~/.poetry/bin
            poetry_cache: ~/Library/Caches/pypoetry
          - os: windows-latest
            os_name: Windows
            poetry_path: $env:Userprofile\.poetry\bin
            poetry_cache: ~\AppData\Local\pypoetry\Cache

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
          echo "::add-path::${{ matrix.poetry_path }}"
      - name: Restore cache
        uses: actions/cache@v1
        with:
          path: ${{ matrix.poetry_cache }}
          key: poetry-python${{ matrix.python }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-python${{ matrix.python }}-${{ runner.os }}-
      - name: Install dependencies
        run: |
          poetry install
      - name: Runs tests
        run: |
          poetry run pytest tests/ --cov=modbot
          poetry run coverage xml
      - name: Upload coverage report
        if: success()
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
      - name: Slack notification
        uses: homoluctus/slatify@master
        if: "! success()"
        with:
          type: ${{ job.status }}
          job_name: '${{ runner.os }} :snake:${{ matrix.python }} Tests'
          url: ${{ secrets.SLACK_WEBHOOK }}
          commit: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}

  Slack:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Slack notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: ':snake: Tests'
          url: ${{ secrets.SLACK_WEBHOOK }}
          commit: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
